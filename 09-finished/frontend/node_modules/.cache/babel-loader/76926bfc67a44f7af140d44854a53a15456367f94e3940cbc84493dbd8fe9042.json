{"ast":null,"code":"var _jsxFileName = \"/home/manu/git_repos/react-complete-guide-course-resources/code/22 Authentication/09-finished/frontend/src/components/EventForm.js\",\n  _s = $RefreshSig$();\nimport { Form, useNavigate, useNavigation, useActionData, json, redirect } from 'react-router-dom';\nimport { getAuthToken } from '../util/auth';\nimport classes from './EventForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventForm({\n  method,\n  event\n}) {\n  _s();\n  const data = useActionData();\n  const navigate = useNavigate();\n  const navigation = useNavigation();\n  console.log(\"event\");\n  console.log(event);\n  const isSubmitting = navigation.state === 'submitting';\n  function cancelHandler() {\n    navigate('..');\n  }\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"message\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(EventForm, \"4RpZWvb1/vq18jUIhqcDrPiPElE=\", false, function () {\n  return [useActionData, useNavigate, useNavigation];\n});\n_c = EventForm;\nexport default EventForm;\nexport async function action({\n  request,\n  params\n}) {\n  console.log(\"into action\");\n  const method = request.method;\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  let url = 'http://localhost:8090/events';\n  if (method === 'PATCH') {\n    const eventId = params.eventId;\n    url = 'http://localhost:8090/events/' + eventId;\n  }\n  const token = getAuthToken();\n  const response = await fetch(url, {\n    method: method,\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + token\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (response.status === 422) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: 'Could not save event.'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"EventForm\");","map":{"version":3,"names":["Form","useNavigate","useNavigation","useActionData","json","redirect","getAuthToken","classes","jsxDEV","_jsxDEV","EventForm","method","event","_s","data","navigate","navigation","console","log","isSubmitting","state","cancelHandler","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","formData","eventData","title","get","image","date","description","url","eventId","token","response","fetch","headers","body","JSON","stringify","status","ok","message","$RefreshReg$"],"sources":["/home/manu/git_repos/react-complete-guide-course-resources/code/22 Authentication/09-finished/frontend/src/components/EventForm.js"],"sourcesContent":["import {\n  Form,\n  useNavigate,\n  useNavigation,\n  useActionData,\n  json,\n  redirect\n} from 'react-router-dom';\n\nimport { getAuthToken } from '../util/auth';\nimport classes from './EventForm.module.css';\n\nfunction EventForm({ method, event }) {\n  const data = useActionData();\n  const navigate = useNavigate();\n  const navigation = useNavigation();\n  console.log(\"event\")\n  console.log(event)\n\n  const isSubmitting = navigation.state === 'submitting';\n\n  function cancelHandler() {\n    navigate('..');\n  }\n\n  return (\n    <p>message</p>\n  );\n}\n\nexport default EventForm;\n\nexport async function action({ request, params }) {\n  console.log(\"into action\")\n  const method = request.method;\n  const data = await request.formData();\n  \n\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description'),\n  };\n\n  let url = 'http://localhost:8090/events';\n\n  if (method === 'PATCH') {\n    const eventId = params.eventId;\n    url = 'http://localhost:8090/events/' + eventId;\n  }\n\n  const token = getAuthToken();\n  const response = await fetch(url, {\n    method: method,\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + token\n    },\n    body: JSON.stringify(eventData),\n  });\n\n  if (response.status === 422) {\n    return response;\n  }\n\n  if (!response.ok) {\n    throw json({ message: 'Could not save event.' }, { status: 500 });\n  }\n\n  return redirect('/events');\n}\n\n"],"mappings":";;AAAA,SACEA,IAAI,EACJC,WAAW,EACXC,aAAa,EACbC,aAAa,EACbC,IAAI,EACJC,QAAQ,QACH,kBAAkB;AAEzB,SAASC,YAAY,QAAQ,cAAc;AAC3C,OAAOC,OAAO,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,SAASA,CAAC;EAAEC,MAAM;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EACpC,MAAMC,IAAI,GAAGX,aAAa,CAAC,CAAC;EAC5B,MAAMY,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAMe,UAAU,GAAGd,aAAa,CAAC,CAAC;EAClCe,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EACpBD,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC;EAElB,MAAMO,YAAY,GAAGH,UAAU,CAACI,KAAK,KAAK,YAAY;EAEtD,SAASC,aAAaA,CAAA,EAAG;IACvBN,QAAQ,CAAC,IAAI,CAAC;EAChB;EAEA,oBACEN,OAAA;IAAAa,QAAA,EAAG;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AAElB;AAACb,EAAA,CAhBQH,SAAS;EAAA,QACHP,aAAa,EACTF,WAAW,EACTC,aAAa;AAAA;AAAAyB,EAAA,GAHzBjB,SAAS;AAkBlB,eAAeA,SAAS;AAExB,OAAO,eAAekB,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EAChDb,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC1B,MAAMP,MAAM,GAAGkB,OAAO,CAAClB,MAAM;EAC7B,MAAMG,IAAI,GAAG,MAAMe,OAAO,CAACE,QAAQ,CAAC,CAAC;EAGrC,MAAMC,SAAS,GAAG;IAChBC,KAAK,EAAEnB,IAAI,CAACoB,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAErB,IAAI,CAACoB,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEtB,IAAI,CAACoB,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEvB,IAAI,CAACoB,GAAG,CAAC,aAAa;EACrC,CAAC;EAED,IAAII,GAAG,GAAG,8BAA8B;EAExC,IAAI3B,MAAM,KAAK,OAAO,EAAE;IACtB,MAAM4B,OAAO,GAAGT,MAAM,CAACS,OAAO;IAC9BD,GAAG,GAAG,+BAA+B,GAAGC,OAAO;EACjD;EAEA,MAAMC,KAAK,GAAGlC,YAAY,CAAC,CAAC;EAC5B,MAAMmC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAG,EAAE;IAChC3B,MAAM,EAAEA,MAAM;IACdgC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,SAAS,GAAGH;IAC/B,CAAC;IACDI,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACd,SAAS;EAChC,CAAC,CAAC;EAEF,IAAIS,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;IAC3B,OAAON,QAAQ;EACjB;EAEA,IAAI,CAACA,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM5C,IAAI,CAAC;MAAE6C,OAAO,EAAE;IAAwB,CAAC,EAAE;MAAEF,MAAM,EAAE;IAAI,CAAC,CAAC;EACnE;EAEA,OAAO1C,QAAQ,CAAC,SAAS,CAAC;AAC5B;AAAC,IAAAsB,EAAA;AAAAuB,YAAA,CAAAvB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}